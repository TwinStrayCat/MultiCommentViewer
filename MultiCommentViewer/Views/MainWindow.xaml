<custom:CustomChrome x:Class="MultiCommentViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MultiCommentViewer"
        xmlns:c="clr-namespace:Common;assembly=Common"
        xmlns:w="clr-namespace:Common.Wpf;assembly=Common"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
          xmlns:custom="clr-namespace:CustomWindow"
        mc:Ignorable="d"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        d:DataContext="{d:DesignInstance local:MainViewModel, IsDesignTimeCreatable=True}"
        Title="{Binding Title}" Topmost="{Binding Topmost}"
        Height="{Binding MainViewHeight, Mode=TwoWay}" Width="{Binding MainViewWidth, Mode=TwoWay}"
        Left="{Binding MainViewLeft, Mode=TwoWay}" Top="{Binding MainViewTop, Mode=TwoWay}"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding MainViewContentRenderedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <!--<i:InvokeCommandAction Command="{Binding MainViewClosingCommand}" />-->
            <command:EventToCommand Command="{Binding MainViewClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <w:NotConverter x:Key="notConverter" />
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <w:IntToFontSizeConverter x:Key="intToFontConverter" />
        <w:DataGridLengthValueConverter x:Key="dataGridLengthConverter" />
        <w:GridLengthConverter x:Key="gridLengthConverter" />
        <local:MessageConverter x:Key="messageConverter" />
        <local:NameConverter x:Key="nameConverter" />

    </Window.Resources>
    <Grid Background="{Binding ClientAreaBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="{Binding ConnectionViewHeight, Mode=TwoWay, Converter={StaticResource gridLengthConverter}}"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="{Binding MetadataViewHeight, Mode=TwoWay, Converter={StaticResource gridLengthConverter}}"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="80" />
        </Grid.RowDefinitions>
        <!--Element treeに属さないelementにDataContextを渡すためのdummy element-->
        <FrameworkElement x:Name="dummyElement" Visibility="Collapsed" DataContext="{Binding}"/>
        <Menu HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="0" Background="{Binding MenuBackground}" Foreground="{Binding MenuForeground}">
            <MenuItem Header="ファイル">
                <Separator />
                <MenuItem Header="終了" Command="{Binding ExitCommand}" />
            </MenuItem>
            <!--<MenuItem Header="表示">
                <MenuItem Header="放送情報" IsChecked="{Binding IsShowLiveInfo}" IsCheckable="True" />
            </MenuItem>-->
            <MenuItem Header="設定">
                <MenuItem Header="常に一番手前に表示" IsChecked="{Binding Topmost}" IsCheckable="True" />
                <MenuItem Header="オプション" Command="{Binding ShowOptionsWindowCommand}"/>
                <!--<MenuItem Header="棒読みちゃん" Command="{Binding ShowBouyomiChanSettingsCommand}" />-->
            </MenuItem>
            <MenuItem Header="プラグイン" ItemsSource="{Binding PluginMenuItemCollection}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding Path=Name}" />
                        <Setter Property="Command" Value="{Binding Path=ShowSettingViewCommand}" />
                        <Setter Property="ItemsSource" Value="{Binding Path=Children}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="ヘルプ">
                <MenuItem Header="配布サイト" Command="{Binding ShowWebSiteCommand}" />
                <MenuItem Header="作者のTwitter" Command="{Binding ShowDevelopersTwitterCommand}" />
                <Separator />
                <MenuItem Header="アップデートを確認" Command="{Binding CheckUpdateCommand}" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Content="接続を追加" Command="{Binding AddNewConnectionCommand}" Margin="0,5" Grid.Column="1" />
                <Button Content="選択した接続を削除" Command="{Binding RemoveSelectedConnectionCommand}" Margin="0,5" Grid.Column="3" />
                <Button Content="取得済みコメントを削除" IsEnabled="False" Command="{Binding ClearAllCommentsCommand}" Margin="0,5" Grid.Column="5" />
            </Grid>
            <ListView Grid.Row="1" ItemsSource="{Binding Connections}" Background="{Binding ConnectionBackground}" Foreground="{Binding ConnectionForeground}"
                  AllowDrop="True" MinHeight="90" 
                  HorizontalAlignment="Stretch" Margin="5,5,5,5" VerticalAlignment="Stretch">
                <ListView.Resources>
                    <Style x:Key="columnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Width" Value="8"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Cursor" Value="SizeWE"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Background" Value="{Binding DataContext.ConnectionHeaderBackground, Source={x:Reference dummyElement}}" />
                        <Setter Property="Foreground" Value="{Binding DataContext.ConnectionHeaderForeground, Source={x:Reference dummyElement}}" />
                        <Setter Property="BorderBrush" Value="{Binding DataContext.ConnectionHeaderBorderBrush, Source={x:Reference dummyElement}}" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="BorderThickness" Value="50" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Grid>
                                        <Border BorderThickness="0,0,1,0" 
                                                BorderBrush="{Binding DataContext.ConnectionHeaderBorderBrush, Source={x:Reference dummyElement}}"
                                                Background="Transparent">
                                            <TextBlock x:Name="ContentHeader"
                                                       Background="{Binding DataContext.ConnectionHeaderBackground, Source={x:Reference dummyElement}}"
                                                       Foreground="{Binding DataContext.ConnectionHeaderForeground, Source={x:Reference dummyElement}}"
                                                       Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                        </Border>
                                        <!-- サイズ変更グリップ -->
                                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource columnHeaderGripperStyle}"/>
                                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource columnHeaderGripperStyle}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Resources>
                            <!-- Foreground for Selected ListViewItem -->
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                                 Color="Yellow"/>
                            <!-- Background for Selected ListViewItem -->
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="Yellow"/>
                        </Style.Resources>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    <Condition Binding="{Binding IsDragging, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="{Binding DataContext.ButtonMouseOverForeground, Source={x:Reference dummyElement}}" />
                                <Setter Property="Background" Value="{Binding DataContext.ButtonMouseOverBackground, Source={x:Reference dummyElement}}" />
                                <Setter Property="BorderBrush" Value="{Binding DataContext.ButtonMouseOverBorderBrush, Source={x:Reference dummyElement}}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Width="40">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="選択" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected}" IsEnabled="{Binding CanConnect}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="120">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="サイト" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Sites}" DisplayMemberPath="DisplayName" IsEnabled="{Binding CanConnect}"
                                              SelectedValue="{Binding SelectedSite}" >
                                        </ComboBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="Auto">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="名前" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Name, UpdateSourceTrigger=LostFocus}" Width="50" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="220">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="URL,放送ID等" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}" Width="200" IsEnabled="{Binding CanConnect}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="130">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="ブラウザ" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Browsers}" DisplayMemberPath="DisplayName" IsEnabled="{Binding CanConnect}"
                                              SelectedValue="{Binding SelectedBrowser}"  />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="50">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="接続" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="接続" IsEnabled="{Binding CanConnect}" Command="{Binding ConnectCommand}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="50">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="切断" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="切断" IsEnabled="{Binding CanDisconnect}" Command="{Binding DisconnectCommand}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="40">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="保存" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding NeedSave}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="80">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Content="ログインユーザ名" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding LoggedInUsername}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <GridSplitter Background="{Binding ClientAreaBackground}" Grid.Row="2" Height="5" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext" ResizeDirection="Rows" />
        <Grid Grid.Row="3">
            <DataGrid ItemsSource="{Binding MetaCollection, IsAsync=True}" Margin="5,0" MinHeight="80"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserReorderColumns="True"
                      CanUserResizeColumns="True"
                      CanUserResizeRows="False"
                      CanUserSortColumns="False"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      RowHeaderWidth="0"
                      >
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{Binding SelectedRowBackColor}"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{Binding SelectedRowForeColor}" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{Binding SelectedRowBackColor}"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{Binding SelectedRowForeColor}"/>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{Binding MetadataViewBackground}" />
                        <Setter Property="Foreground" Value="{Binding MetadataViewForeground}" />
                    </Style>
                    <!-- Thumb(列ヘッダ幅変更マウスカーソル) Style設定 -->
                    <!--<Style x:Key="columnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Width" Value="8"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Cursor" Value="SizeWE"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>-->
                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                        <Setter Property="Foreground" Value="{Binding DataContext.MetadataViewHeaderForeground, Source={x:Reference dummyElement}}" />
                        <Setter Property="Background" Value="{Binding DataContext.MetadataViewHeaderBackground, Source={x:Reference dummyElement}}" />
                        <Setter Property="BorderBrush" Value="{Binding DataContext.MetadataViewHeaderBorderBrush, Source={x:Reference dummyElement}}" />
                        <Setter Property="BorderThickness" Value="0 0 1 1" />
                    </Style>
                    <Style x:Key="headerStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="Padding" Value="5 3 5 3" />
                        <Setter Property="Background" Value="{Binding DataContext.MetadataViewHeaderBackground, Source={x:Reference dummyElement}}" />
                        <Setter Property="Foreground" Value="{Binding DataContext.MetadataViewHeaderForeground, Source={x:Reference dummyElement}}" />
                        <Setter Property="Margin" Value="0" />
                    </Style>
                    <!--<Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5 5 5 5" />
                    </Style>-->
                    <!--<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                        <Setter Property="Foreground" Value="{Binding MetadataViewHeaderForeground}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        --><!-- ヘッダ の外観 --><!--
                                        <Border x:Name="columnHeaderBorder"
                                                BorderThickness="0 0 1 1"
                                                Padding="3 0 3 0"
                                                BorderBrush="{Binding MetadataViewHeaderBorderBrush}"
                                                >

                                            <Grid>
                                                --><!-- ソートマーク --><!--
                                                <Path x:Name="sortArrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      Width="8" Height="6" Margin="0 2 0 0"
                                      Stretch="Fill" Fill="DarkGray"
                                      RenderTransformOrigin="0.5 0.4"
                                      Visibility="Collapsed"
                                      Data="M0,0 L1,0 0.5,1 z" />
                                                --><!-- ヘッダ文字列 --><!--
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="{Binding MetadataViewHeaderForeground}" />
                                            </Grid>
                                        </Border>

                                        --><!-- サイズ変更グリップ --><!--
                                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource columnHeaderGripperStyle}"/>
                                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource columnHeaderGripperStyle}"/>
                                    </Grid>

                                    --><!-- ソート trigger --><!--
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="SortDirection" Value="Ascending">
                                            <Setter TargetName="sortArrow" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="sortArrow" Property="RenderTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="180" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="SortDirection" Value="Descending">
                                            <Setter TargetName="sortArrow" Property="Visibility" Value="Visible" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>-->
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="{Binding DataContext.MetadataViewRowBackground, Source={x:Reference dummyElement}}" />
                        <Setter Property="Foreground" Value="{Binding DataContext.MetadataViewRowForeground, Source={x:Reference dummyElement}}" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="{Binding DataContext.SelectedRowForeground, Source={x:Reference dummyElement}}" />
                                <Setter Property="Background" Value="{Binding DataContext.SelectedRowBackground, Source={x:Reference dummyElement}}" />
                                <!--<Setter Property="BorderBrush" Value="{Binding DataContext.MetadataViewHeaderBorderBrush, Source={x:Reference dummyElement}}" />-->
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                    <!--<Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="{Binding MetadataViewRowBackground}" />
                        <Setter Property="Foreground" Value="{Binding MetadataViewRowForeground}" />
                        <Setter Property="BorderBrush" Value="White" />
                        <Setter Property="BorderThickness" Value="0 0 1 1" />
                    </Style>-->

                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="接続名" Style="{StaticResource headerStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ConnectionName}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="タイトル" Style="{StaticResource headerStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Title}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="経過時間" Style="{StaticResource headerStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Elapsed}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="視聴者数" Style="{StaticResource headerStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CurrentViewers}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="総視聴者数" Style="{StaticResource headerStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TotalViewers}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="アクティブ" Style="{StaticResource headerStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Active}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="その他" Style="{StaticResource headerStyle}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Others}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <GridSplitter Background="{Binding ClientAreaBackground}" Grid.Row="4" Height="5" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext" ResizeDirection="Rows"  />
        <local:CommentDataGrid IsShowUserInfoMenuItem="True" Margin="5" Grid.Row="5" />
        <!--<DataGrid x:Name="dataGrid" ItemsSource="{Binding Comments, IsAsync=True}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"                      
                  CanUserReorderColumns="True"
                  CanUserResizeColumns="True"
                  CanUserResizeRows="True"
                  CanUserSortColumns="False"    
                  HeadersVisibility="Column"
                  SelectedValue="{Binding SelectedComment}"
                  RowHeaderWidth="0"
                  SelectionUnit="FullRow"
                  SelectionMode="Single"
                  EnableColumnVirtualization="True"
                  EnableRowVirtualization="True"                      
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  VirtualizingStackPanel.ScrollUnit="Pixel"
                  GridLinesVisibility="All"
                  HorizontalGridLinesBrush="{Binding HorizontalGridLineBrush}"
                  VerticalGridLinesBrush="{Binding VerticalGridLineBrush}"
                  VerticalScrollBarVisibility="Visible"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.ScrollChanged="DataGridScrollChanged"
                  ScrollViewer.IsDeferredScrollingEnabled="True"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Margin="5" Grid.Row="5">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{Binding SelectedRowBackColor}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{Binding SelectedRowForeColor}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{Binding SelectedRowBackColor}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{Binding SelectedRowForeColor}"/>
                <ContextMenu x:Key="commentContext" DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    <MenuItem Header="コメントをコピー" Command="{Binding CommentCopyCommand}" />
                    <MenuItem Header="URLを開く" IsEnabled="{Binding ContainsUrl}" Command="{Binding OpenUrlCommand}" />
                    <Separator />
                        <MenuItem Header="ユーザ情報" Command="{Binding ShowUserInfoCommand}" />
                </ContextMenu>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="FontFamily" Value="{Binding FontFamily}" />
                    <Setter Property="FontStyle" Value="{Binding FontStyle}" />
                    <Setter Property="FontWeight" Value="{Binding FontWeight}" />
                    <Setter Property="FontSize" Value="{Binding FontSize, Converter={StaticResource intToFontConverter}}"/>
                    <Setter Property="Background" Value="{Binding Background}" />
                    <Setter Property="Foreground" Value="{Binding Foreground}" />
                    <Setter Property="ContextMenu" Value="{StaticResource commentContext}" />
                    --><!--<Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />--><!--
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsVisible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                </Style>
                <ContextMenu x:Key="listViewHeaderContext" DataContext="{Binding DataContext, Source={x:Reference dummyElement}}">
                    <MenuItem Header="接続名" IsChecked="{Binding IsShowConnectionName, Mode=TwoWay}" IsCheckable="True" />
                    <MenuItem Header="サムネ" IsChecked="{Binding IsShowThumbnail, Mode=TwoWay}" IsCheckable="True" />
                    <MenuItem Header="コメントID" IsChecked="{Binding IsShowCommentId, Mode=TwoWay}" IsCheckable="True" />
                    <MenuItem Header="ユーザ名" IsChecked="{Binding IsShowUsername, Mode=TwoWay}" IsCheckable="True" />
                    <MenuItem Header="情報" IsChecked="{Binding IsShowInfo, Mode=TwoWay}" IsCheckable="True" />
                    --><!--<MenuItem Header="ユーザID" IsChecked="{Binding IsShowUserId, Mode=TwoWay}" IsCheckable="True" />-->

                    <!--<MenuItem Header="投稿時間" IsChecked="{Binding IsShowPostTime, Mode=TwoWay}" IsCheckable="True" />-->
                    <!--<MenuItem Header="経過時間" IsChecked="{Binding IsShowPostElapsed, Mode=TwoWay}" IsCheckable="True" />--><!--
                </ContextMenu>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="ContextMenu" Value="{StaticResource listViewHeaderContext}" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="接続名" 
                                            DisplayIndex="{Binding DataContext.ConnectionNameDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=0}"
                                            Width="{Binding DataContext.ConnectionNameWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                            Visibility="{Binding DataContext.IsShowConnectionName, Source={x:Reference dummyElement}, Converter={StaticResource booleanToVisibilityConverter}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ConnectionName}" Padding="5,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="ｻﾑﾈ" 
                                            DisplayIndex="{Binding DataContext.ThumbnailDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=1}"
                                            Width="{Binding DataContext.ThumbnailWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                            Visibility="{Binding DataContext.IsShowThumbnail, Source={x:Reference dummyElement}, Converter={StaticResource booleanToVisibilityConverter}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="Ellipse">
                            --><!--<Image w:LazyImageBehavior.LazySource="{Binding ThumbnailUrl}" />--><!--
                            <Image Source="{Binding Thumbnail}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="コメントID"
                                        DisplayIndex="{Binding DataContext.CommentIdDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=2}"
                                        Visibility="{Binding DataContext.IsShowCommentId, Source={x:Reference dummyElement}, Converter={StaticResource booleanToVisibilityConverter}}"
                                        Width="{Binding DataContext.CommentIdWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                        >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock TextWrapping="NoWrap" Text="{Binding Id}"  Padding="5,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="ユーザ名" 
                                            DisplayIndex="{Binding DataContext.UsernameDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=3}"
                                            Visibility="{Binding DataContext.IsShowUsername, Source={x:Reference dummyElement}, Converter={StaticResource booleanToVisibilityConverter}}"
                                            Width="{Binding DataContext.UsernameWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                            >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <w:BindableTextBlock TextWrapping="NoWrap" InlineList="{Binding NameItems, Converter={StaticResource nameConverter}}"
                                                  Padding="5,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="コメント"
                                            DisplayIndex="{Binding DataContext.MessageDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=4}"
                                            Visibility="Visible"
                                            Width="{Binding DataContext.MessageWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                            >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <w:BindableTextBlock TextWrapping="Wrap"
                                                  InlineList="{Binding MessageItems, Converter={StaticResource messageConverter}, ConverterParameter=true}" Padding="5,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="情報" 
                                            DisplayIndex="{Binding DataContext.InfoDisplayIndex, Mode=TwoWay, Source={x:Reference dummyElement}, FallbackValue=5}"
                                            Width="{Binding DataContext.InfoWidth, Mode=TwoWay, Source={x:Reference dummyElement}, Converter={StaticResource dataGridLengthConverter}}"
                                            Visibility="{Binding DataContext.IsShowInfo, Source={x:Reference dummyElement}, Converter={StaticResource booleanToVisibilityConverter}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Info}" Padding="5,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>-->
        <Grid Grid.Row="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ComboBox ItemsSource="{Binding Connections}" SelectedValue="{Binding SelectedConnection}" DisplayMemberPath="Name" Grid.Column="0" Margin="10" Height="30" />
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="PostCommentPanelPlaceHolder" Grid.Column="2" />
        </Grid>
    </Grid>
</custom:CustomChrome>
